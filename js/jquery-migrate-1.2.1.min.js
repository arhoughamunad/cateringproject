/*!
 * jQuery Migrate v1.2.1
 * (c) 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Licensed under MIT (https://jquery.org/license)
 */

(function ($, window, undefined) {
    "use strict";

    // Almacena advertencias mostradas
    var warnings = {};
    $.migrateWarnings = [];

    // Controla si se debe mostrar advertencias en la consola
    if (!$.migrateMute && window.console && window.console.log) {
        window.console.log("JQMIGRATE: Logging is active");
    }

    // Configura si se debe rastrear el origen de las advertencias
    $.migrateTrace = $.migrateTrace === undefined ? true : $.migrateTrace;

    /**
     * Funci칩n para registrar advertencias de compatibilidad.
     * @param {string} msg - Mensaje de advertencia
     */
    function migrateWarn(msg) {
        if (!warnings[msg]) {
            warnings[msg] = true;
            $.migrateWarnings.push(msg);
            if (window.console && window.console.warn && !$.migrateMute) {
                window.console.warn("JQMIGRATE: " + msg);
                if ($.migrateTrace && window.console.trace) {
                    window.console.trace();
                }
            }
        }
    }

    /**
     * Restablece las advertencias acumuladas
     */
    $.migrateReset = function () {
        warnings = {};
        $.migrateWarnings.length = 0;
    };

    // Verifica si jQuery est치 ejecut치ndose en modo Quirks
    if (document.compatMode === "BackCompat") {
        migrateWarn("jQuery is not compatible with Quirks Mode");
    }

    /**
     * Hook para atributos, maneja valores antiguos de atributos.
     */
    $.attrHooks.value = {
        get: function (elem, name) {
            var nodeName = (elem.nodeName || "").toLowerCase();
            if (nodeName === "button") {
                return elem.getAttribute(name);
            }
            if (nodeName !== "input" && nodeName !== "option") {
                migrateWarn("jQuery.fn.attr('value') no longer gets properties");
            }
            return name in elem ? elem.value : null;
        },
        set: function (elem, value) {
            var nodeName = (elem.nodeName || "").toLowerCase();
            if (nodeName === "button") {
                elem.setAttribute("value", value);
                return;
            }
            if (nodeName !== "input" && nodeName !== "option") {
                migrateWarn("jQuery.fn.attr('value', val) no longer sets properties");
            }
            elem.value = value;
        }
    };

    /**
     * Deprecaci칩n de `jQuery.browser`
     */
    $.uaMatch = function (ua) {
        ua = ua.toLowerCase();
        var match = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
                    /(webkit)[ \/]([\w.]+)/.exec(ua) ||
                    /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
                    /(msie) ([\w.]+)/.exec(ua) ||
                    ua.indexOf("compatible") < 0 &&
                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
        return { browser: match[1] || "", version: match[2] || "0" };
    };

    // Manejo de eventos obsoletos
    $.fn.andSelf = function () {
        migrateWarn("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()");
        return this.addBack.apply(this, arguments);
    };

    /**
     * Muestra advertencias para eventos AJAX adjuntados al documento
     */
    var ajaxEvents = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess".split("|");
    $.each(ajaxEvents, function (i, event) {
        $.event.special[event] = {
            setup: function () {
                if (this !== document) {
                    migrateWarn("AJAX events should be attached to document: " + event);
                }
                return false;
            },
            teardown: function () {
                return false;
            }
        };
    });

})(jQuery, window);
